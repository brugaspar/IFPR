generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()

  questions Question[]

  @@map("tag")
}

enum QuestionType {
  open
  single
  multiple
}

enum QuestionDifficulty {
  easy
  medium
  hard
}

model Question {
  id          String             @id @default(uuid())
  title       String
  description String?
  type        QuestionType       @default(open)
  difficulty  QuestionDifficulty @default(easy)
  createdAt   DateTime           @default(now()) @map("created_at") @db.Timestamptz()

  tagId          String         @map("tag_id")
  tag            Tag            @relation(fields: [tagId], references: [id])
  alternatives   Alternative[]
  examsQuestions ExamQuestion[]

  @@map("question")
}

model Alternative {
  id        String  @id @default(uuid())
  title     String
  isCorrect Boolean @default(false) @map("is_correct")

  questionId String   @map("question_id")
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("alternative")
}

enum ExamStatus {
  draft
  published
  waiting_for_review
  finished
}

model Exam {
  id          String     @id @default(uuid())
  status      ExamStatus @default(draft)
  title       String
  description String?
  grade       Decimal?
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz()
  finishedAt  DateTime?  @map("finished_at") @db.Timestamptz()

  questions ExamQuestion[]

  @@map("exam")
}

model ExamQuestion {
  id           String   @id @default(uuid())
  grade        Decimal?
  answer       String?
  alternatives Json?
  commentary   String?

  examId     String
  exam       Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("exam_question")
}
